import unittest
>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList([3, 1, 2])
>>> my_list.print_sorted()
[1, 2, 3]

>>> my_list = MyList()
>>> type(my_list)
<class '1-my_list.MyList'>


>>> print(my_list)
[]


>>> my_list = MyList([1, 2, 3])
>>> print(my_list)
[1, 2, 3]


>>> my_list = MyList(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'NoneType' object is not iterable


>>> my_list = MyList([1, 2], [3, 4])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: list expected at most 1 argument, got 2


>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(3)
>>> print(my_list)
[1, 2, 3]


>>> my_list[0] = 5
>>> print(my_list)
[5, 2, 3]


>>> my_list.remove(5)
>>> print(my_list)
[2, 3]


>>> print(my_list.print_sorted)
<bound method MyList.print_sorted of [2, 3]>


>>> print(my_list.print_sorted(9))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: print_sorted() takes 1 positional argument but 2 were given


>>> my_list.append(1)
>>> my_list.append(5)
>>> my_list.append(6)
>>> print(my_list)
[2, 3, 1, 5, 6]


>>> my_list.print_sorted()
[1, 2, 3, 5, 6]

>>> print(my_list)
[2, 3, 1, 5, 6]

>>> my_list.remove(1)
>>> my_list.remove(6)
>>> my_list.append(-6)
>>> my_list.append(8)

>>> print(my_list)
[2, 3, 5, -6, 8]
>>> print(my_list.print_sorted)
<bound method MyList.print_sorted of [2, 3, 5, -6, 8]>
>>> print(my_list.print_sorted())
[-6, 2, 3, 5, 8]
None

>>> my_list.remove(-6)
>>> my_list.remove(2)
>>> my_list.remove(3)
>>> my_list.remove(5)
>>> my_list.remove(8)

>>> print(my_list)
[]
>>> print(my_list.print_sorted())
[]
None
>>> print(my_list.print_sorted)
<bound method MyList.print_sorted of []>
